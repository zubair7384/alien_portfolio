@tailwind base;
@tailwind components;
@tailwind utilities;
@import url("https://fonts.googleapis.com/css2?family=Finger+Paint&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Figtree:wght@300;400;500&display=swap");
@import url("https://fonts.googleapis.com/css?family=Josefin+Sans:700");

$xsm: 350px;
$sm: 500px;
$md: 768px;
$lg: 1200px;
$xlg: 1600px;

$myColor1: #00ff29;

body {
  margin: 0;
  padding: 0;
  font-family: "Figtree", sans-serif;
  background-color: #000;
  cursor: none;
}

.mainContainer {
  max-width: 90%;
  margin: 0 auto;
  .headerWrapper {
    height: 120px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    .headerName {
      font-size: clamp(10px, 2vw, 16px);
      color: #bdbdbd;
      z-index: 1;
      span {
        letter-spacing: -2px;
      }
    }
    .headerTitle {
      font-size: clamp(16px, 4vw, 42px);
      font-weight: 600;
      color: $myColor1;
      letter-spacing: 2px;
      word-spacing: 2px;
      @media only screen and (max-width: $sm) {
        letter-spacing: 1px;
        word-spacing: -2px;
      }
      @media only screen and (max-width: $xsm) {
        font-size: 12px;
      }
    }
    @media only screen and (max-width: $md) {
      height: 80px;
    }
  }
  .descriptionContaoner {
    position: relative;
    display: flex;
    justify-content: space-between;
    padding: 100px 0;
    @media only screen and (max-width: $lg) {
      flex-direction: column-reverse;
      padding: 30px 0;
    }
    .greenEllipse {
      width: 400px;
      height: 400px;
      border-radius: 50%;
      background-color: $myColor1;
      animation-name: ellipse;
      animation-duration: 5s;
      animation-timing-function: ease-out;
      animation-direction: alternate;
      animation-iteration-count: infinite;
      animation-play-state: running;
      position: absolute;
      box-shadow: 0px 0px 0px 200px $myColor1;
      filter: blur(100px);
      z-index: 0;
      left: 45%;
      top: 24%;
      @media only screen and (max-width: $lg) {
        width: 50px;
        height: 50px;
        box-shadow: 0px 0px 0px 200px $myColor1;
        left: auto;
        right: 0;
        top: 40%;
      }
      @media only screen and (max-width: $md) {
        width: 280px;
        height: 280px;
        box-shadow: 0px 0px 0px 30px $myColor1;
        filter: blur(60px);
        left: 15%;
        top: 10%;
      }
    }
    .desCol {
      width: 40%;
      @media only screen and (max-width: $lg) {
        width: 100%;
      }
      h2 {
        position: relative;
        font-size: clamp(18px, 4vw, 36px);
        color: #fff;
        line-height: 120%;
        text-align: left;
        margin-bottom: 53px;
        @media only screen and (max-width: $lg) {
          margin-top: 20px;
          margin-bottom: 30px;
        }
        @media only screen and (max-width: $sm) {
          margin-top: 15px;
          margin-bottom: 15px;
        }
      }
      p {
        font-size: 16px;
        color: #828282;
        line-height: 120%;
        text-align: left;
        margin-bottom: 20px;
        @media only screen and (max-width: $md) {
          font-size: 12px;
          line-height: 125%;
        }
        @media only screen and (max-width: $lg) {
          position: relative;
          color: #ffffff;
        }
      }
    }
    .featuredCol {
      position: relative;
      @media only screen and (max-width: $lg) {
        width: 100%;
      }
      h3 {
        font-size: clamp(18px, 4vw, 36px);
        color: #fff;
        margin-bottom: 10px;
      }
      h4 {
        font-size: clamp(14px, 4vw, 24px);
        font-weight: 400;
        color: #fff;
        margin: 20px 0;
        @media only screen and (max-width: $md) {
          margin: 10px 0;
        }
      }
      .lineBottom {
        height: 1px;
        background-color: #fff;
        border: none;
      }
      ul {
        display: flex;
        align-items: center;
        justify-content: flex-start;
        gap: 20px;
        margin-bottom: 26px;
        @media only screen and (max-width: $md) {
          margin-bottom: 20px;
        }
        li {
          // cursor: pointer;
          a {
            img {
              width: 195px;
              height: auto;
            }
          }

          .fahrWrapper {
            border-radius: 5px;
            padding: 4.6px 10px;
            width: 195px;
            font-weight: 300;
            font-size: 24px;
            background-color: #d2232a;
            color: #ffffff;
            span {
              font-weight: 600;
            }
          }
        }
      }
    }
  }
  .cardsContainer {
    position: relative;
    ul {
      display: flex;
      flex-wrap: wrap;
      justify-content: flex-start;
      align-items: center;
      width: 100%;
      gap: 1.2rem;
      @media screen and (max-width: $md) {
        gap: 2rem;
      }
      @media screen and (max-width: $sm) {
        gap: 0.1rem;
        row-gap: 0.4rem;
        justify-content: space-between;
      }
      li {
        display: flex;
        justify-content: center;
        align-items: center;
        transition: transform 0.5s;
        flex: 0 0 calc(16.66% - 20px);
        padding: 2px;
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        &:last-child {
          margin-right: 0;
        }
        @media screen and (max-width: $md) {
          flex: 0 0 calc(50% - 20px);
          &:nth-child(2n) {
            margin-right: 0;
          }
        }
        @media screen and (max-width: $sm) {
          flex: 0 0 49%;
        }
        .plus {
          display: none;
        }
        &:hover {
          filter: brightness(0.6);
          @media screen and (max-width: $md) {
            filter: brightness(1);
          }
        }
        img {
          max-width: 100%;
          height: auto;
          border-radius: 8px;
        }
      }
    }
  }
}

.footerContainer {
  margin-top: 100px;
  background-color: $myColor1;
  @media only screen and (max-width: $md) {
    margin-top: 50px;
  }
  .nuxtMarquee {
    background-color: $myColor1;
    border-bottom: 1px solid #000;
  }
  .footerMarqueeText {
    font-size: 154px;
    font-weight: 600;
    color: #000;
    margin-left: 35px;
    @media only screen and (max-width: $md) {
      font-size: 80px;
    }
  }
  .mainFooter {
    width: 90%;
    margin: 0 auto;
    height: 60px;
    background-color: $myColor1;
    display: flex;
    align-items: center;
    justify-content: space-between;
    p {
      color: #000;
      font-size: 14px;
      text-transform: uppercase;
      @media only screen and (max-width: $md) {
        font-size: 12px;
      }
      @media only screen and (max-width: $sm) {
        font-size: 10px;
      }
      span {
        letter-spacing: -2px;
      }
    }
  }
}

// Glitch Effect

#wrapper {
  text-align: center;
}

.sub {
  color: rgb(100, 220, 220);
  // letter-spacing: 1em;
}

// Here's the meat and potatoes.

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
@mixin glitchCopy {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch {
  position: relative;
  color: white;
  font-size: 4em;
  letter-spacing: 0.5em;
  /* Animation provies a slight random skew. Check bottom of doc
 for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;

  // Creates a copy before our text.
  &::before {
    // Duplicates our text with the mixin.
    @include glitchCopy;
    // Scoots text slightly to the left for the color offset.
    left: 2px;
    // Creates the color 'shadow' that happens on the glitch.
    text-shadow: -2px 0 #ff00c1;
    /* Creates an initial clip for our glitch. This works in
   a typical top,right,bottom,left fashion and creates a mask
   to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 56px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
   with an alternating animation to keep things fresh. */
    animation: glitch-anim 5s infinite linear alternate-reverse;
  }

  // Creates a copy after our text. Note comments from ::before.
  &::after {
    @include glitchCopy;
    left: -2px;
    text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
    animation: glitch-anim2 1s infinite linear alternate-reverse;
  }
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      transform: skew((random(100) / 100) + deg);
    }
  }
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      transform: skew((random(100) / 100) + deg);
    }
  }
}

// Does the same deal as before, but now only skews. Used for main text.
@keyframes glitch-skew {
  $steps: 10;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      transform: skew((random(10) - 5) + deg);
    }
  }
}

// Animated Cursor
.cursor {
  cursor: none;
}

.cursor.fx .cursor-fx {
  position: absolute;
  width: 40px;
  height: 40px;
  background-color: rgba(255, 255, 255, 0.2);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
  mix-blend-mode: overlay;
  z-index: 10000;
}

.cursor.fx .cursor-fx:before,
.cursor.fx .cursor-fx:after {
  content: "";
  display: block;
  position: absolute;
  width: 4px;
  height: 4px;
  background-color: white;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  pointer-events: none;
  mix-blend-mode: overlay;
}

.cursor.fx .cursor-fx:before {
  top: 30%;
  left: 0;
}

.cursor.fx .cursor-fx:after {
  top: 70%;
  left: 0;
}

// Scroll Icon
.mainBannerContainer {
  position: relative;
  .icon {
    position: absolute;
    left: 50%;
    top: 90%;
    width: 50px;
    height: 25px;
    overflow: hidden;
    animation-name: animation;
    animation-duration: 2s;
    animation-iteration-count: infinite;
    animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);
    margin-top: 0;
    opacity: 0;
    @media only screen and (max-width: $md) {
      display: none;
    }
    &::before {
      content: "";
      box-sizing: border-box;
      width: 50px;
      height: 50px;
      position: absolute;
      top: -36px;
      left: 0;
      border: solid 2px #fff;
      transform: rotate(45deg);
    }
  }
  .lgImage {
    width: 100%;
    display: block;
    @media only screen and (max-width: $md) {
      display: none;
    }
  }
  .smImage {
    width: 100%;
    display: none;
    @media only screen and (max-width: $md) {
      display: block;
    }
  }
}
@keyframes animation {
  0% {
    margin-top: 0;
    opacity: 0;
  }
  5% {
    margin-top: 0;
    opacity: 1;
  }
  25% {
    opacity: 0.5;
  }
  50% {
    margin-top: 24px;
    opacity: 0;
  }
  100% {
    margin-top: 24px;
    opacity: 0;
  }
}

.big {
  position: absolute;
  z-index: 99999;
  width: 20px;
  height: 20px;
  background-color: $myColor1;
  border-radius: 50%;
  margin-bottom: 20rem;
  animation-name: stretch;
  animation-duration: 2s;
  animation-timing-function: ease-out;
  animation-direction: alternate;
  animation-iteration-count: infinite;
  animation-play-state: running;
  transition: transform 0.06s;
  @media only screen and (max-width: 1024px) {
    display: none;
  }
}
@keyframes ellipse {
  0% {
    box-shadow: 0px 0px 0px 40px $myColor1;
  }
  25% {
    box-shadow: 0px 0px 0px 50px $myColor1;
  }
  50% {
    box-shadow: 0px 0px 0px 75px $myColor1;
    filter: blur(75px);
  }

  100% {
    box-shadow: 0px 0px 0px 100px $myColor1;
    filter: blur(100px);
  }
}

@media only screen and (max-width: $md) {
  @keyframes ellipse {
    0% {
      box-shadow: 0px 0px 0px 10px $myColor1;
    }
    25% {
      box-shadow: 0px 0px 0px 20px $myColor1;
    }
    50% {
      box-shadow: 0px 0px 0px 30px $myColor1;
      filter: blur(75px);
    }

    100% {
      box-shadow: 0px 0px 0px 40px $myColor1;
      filter: blur(100px);
    }
  }
}
